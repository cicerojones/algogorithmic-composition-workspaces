* Purpose: creating lisp code for editing pwgl rhythms
  :PROPERTIES:
  :ID:       C0FF2111-0CFE-450F-90D1-430A13B5B203
  :END:
* canon of basic 4/4 rhythms (whole, half, dotted-half, quarters, eighths)
  :PROPERTIES:
  :ID:       61A55E31-3845-4C21-96AA-EEB7923C03CC
  :END:
** ;; whole-note in 4/4
*** 4
#+BEGIN_SRC lisp
 ;; whole-note in 4/4
 ((4 (1))) 				; 4
#+END_SRC
** ;; two half-notes in 4/4
*** 22
#+BEGIN_SRC lisp
 ;; two half-notes in 4/4
 ((2 (1)) (2 (1)))			;22better
#+END_SRC
** ;; dotted-half, quarter in 4/4
*** 31
#+BEGIN_SRC lisp
;; dotted-half, quarter in 4/4
((3 (1)) (1 (1)))			;31
#+END_SRC
** ;; quarter, dotted-half in 4/4
*** 13
#+BEGIN_SRC lisp
;; quarter, dotted-half in 4/4
((1 (1)) (3 (1))) 			;13
#+END_SRC
** ;; half, two quarters in 4/4
*** 211
#+BEGIN_SRC lisp
;; half, two quarters in 4/4
((2 (1)) (1 (1)) (1 (1)))		;211
#+END_SRC
** ;; quarter, half, quarter in 4/4
*** 121
#+BEGIN_SRC lisp
;; quarter, half, quarter in 4/4

 ((1 (1)) (2 (1)) (1 (1)))		;121
#+END_SRC
** ;; two quarters, half in 4/4
*** 112
#+BEGIN_SRC lisp
;; two quarters, half in 4/4
((1 (1)) (1 (1)) (2 (1)))		;112
#+END_SRC
** ;; four quarters in 4/4 (concisest)
*** 1111
#+BEGIN_SRC lisp
;; four quarters in 4/4 (concisest)
((1 (1)) (1 (1)) (1 (1)) (1 (1)))	;1111best
#+END_SRC
** ;; four eighths, half in 4/4
*** 55552
#+BEGIN_SRC lisp
 ;; four eighths, half in 4/4
 ((2 (1 1 1 1)) (2 (1)))
#+END_SRC
** ;; half, four eighths in 4/4
*** 25555
#+BEGIN_SRC lisp
;; half, four eighths in 4/4
((2 (1)) (2 (1 1 1 1)))
#+END_SRC
** ;; four eighths, two quarters in 4/4
*** 555522
#+BEGIN_SRC lisp
 ;; four eighths, two quarters in 4/4
 ((2 (1 1 1 1)) (2 (1 1)))
#+END_SRC
** ;; two quarters, four eighths in 4/4
*** 115555
#+BEGIN_SRC lisp
;; two quarters, four eighths in 4/4
((2 (1 1)) (2 (1 1 1 1)))
#+END_SRC
** ;; dotted half tied to eighth, two sixteenths in 4/4
*** 35066
#+BEGIN_SRC lisp
((3 (1)) (1 (2.0 1 1)))

#+END_SRC
** ;; dotted half, two eighths in 4/4
#+BEGIN_SRC lisp
((4 (6 1 1)))

#+END_SRC
** ;; whole rest, 4/4
** ;; dotted quarter, two sixteenths, quarter, quarter rest in 4/4
#+BEGIN_SRC lisp
((2 (6 1 1)) (2 (1 -1)))
#+END_SRC
* non-4/4 rhythms
** ;; one half, one quarter in 3/4
#+BEGIN_SRC lisp
((2 (1)) (1 (1)))
#+END_SRC
** ;; tied over quarter, quarter in 2/4
#+BEGIN_SRC lisp
((1 (1.0)) (1 (1)))
#+END_SRC
** ;; dotted quarter, eighth in 2/4
#+BEGIN_SRC lisp
((2 (3 1)))
#+END_SRC
** ;; two eighths, one quarter in 2/4
#+BEGIN_SRC lisp
((1 (1 1)) (1 (1)))
#+END_SRC
** ;; two eighths, two quarters in 3/4
#+BEGIN_SRC lisp
((1 (1 1)) (1 (1)) (1 (1)))
#+END_SRC
** ;; single half in 2/4
#+BEGIN_SRC lisp
((2 (1)))
#+END_SRC
** ;; one quarter tied to one quarter in 2/4
#+BEGIN_SRC lisp
((1 (1)) (1 (1.0)))
#+END_SRC
** ;; one quarter tied to one eighth, one eighth in 2/4
#+BEGIN_SRC lisp
((1 (1)) (1 (1.0 1)))
#+END_SRC
** ;; tied quarter to eighth, two sixteenths in 2/4
#+BEGIN_SRC lisp
((1 (1)) (1 (2.0 1 1)))
#+END_SRC
** ;; quarter, two eighths, two eighths, in 3/4
#+BEGIN_SRC lisp
((1 (1)) (1 (1 1)) (1 (1 1)))

#+END_SRC
** ;; dotted eighth, sixteenth in 1/4
#+BEGIN_SRC lisp
((1 (3 1)))
#+END_SRC
** ;; dotted eighth, two sixteenths in 2/4
#+BEGIN_SRC lisp
((2 (6 1 1)))

#+END_SRC
** ;; quarter, eighth, 3/8 (compare with half, quarter in 4/4)
#+BEGIN_SRC lisp
((2 (1)) (1 (1))) ;; 
((2 (1)) (1 (1)) :time-signature (3 8))
#+END_SRC
** ;; quarter, dotted eighth, sixteenth in 4/8
#+BEGIN_SRC lisp
(:begin :measure
 (2 (1)) (2 (3 1)) :time-signature (4 8))
#+END_SRC
* complicated ENP examples
** original with canvas elements
#+BEGIN_SRC lisp

(((((2
     ((1
       :notes
       (65)
       :expressions
       ((:canvas-expression
         :elements
         ((:arrow
           :color
           :green
           :vertices
           ((:x 3.9999988 :y 1.2499999) (:x 8.800003 :y 1.25))
           :pattern
           26
           :line-width
           2.0)
          (:filled-circle :color :cyan :x 4.25 :y -0.6000008)
          (:circle
           :color
           :mediumvioletred
           :pattern
           22
           :line-width
           1.5
           :x
           1.0000001
           :y
           -0.6500002)
          (:lineloop
           :color
           :deeppink
           :vertices
           ((:x 0.15 :y 0.9500001)
            (:x 1.1499999 :y 0.9500001)
            (:x 1.1499999 :y 1.9499995)
            (:x 0.15 :y 1.9499995))
           :pattern
           35
           :line-width
           0.6)
          (:polygon
           :color
           :darkturquoise
           :vertices
           ((:x 1.7500001 :y 0.95000017)
            (:x 2.7500003 :y 0.95000017)
            (:x 2.7500003 :y 1.9499993)
            (:x 1.7500001 :y 1.9499993)))
          (:linestrip
           :color
           :maroon
           :vertices
           ((:x 6.45 :y -1.15)
            (:x 6.950001 :y -0.19999993)
            (:x 7.4500003 :y -0.65000004)
            (:x 7.95 :y 0.35))
           :pattern
           44
           :line-width
           0.4)
          (:line
           :color
           :mediumvioletred
           :vertices
           ((:x 8.600001 :y -0.59999997) (:x 9.6 :y -0.59999997))
           :pattern
           11
           :line-width
           5.0)
          (:text
           :color
           :blue
           :font-scaler
           0.62000037
           :x
           7.000001
           :y
           2.6999994
           :text
           "abcd")
          (:text
           :color
           :goldenrod
           :font-scaler
           1.3499997
           :x
           -0.1
           :y
           2.7499998
           :text
           "whqe"
           :font
           :musical-symbols)))))))
    :time-signature
    (2 8)
    :metronome
    (4 60)))
  :instrument
  nil
  :staff
  :treble-staff))
#+END_SRC
** add expression keywords at score, part, voice, and measure level
#+BEGIN_SRC lisp
(((((1 ((1 :notes ((72 :vel 100)))))
   (1 ((1 :notes (72) :expressions (:staccato))
       (1 :notes (74) :expressions (:staccato))
       (1 :notes (76) :expressions (:staccato))
       (1 :notes (77) :expressions (:staccato))
       (1 :notes (78) :expressions (:staccato))) :class :grace-beat)
   (3 ((1 :notes (79) :expressions (:trillo))))
:metronome-value 120)
:instrument :Clarinet)
:staff :alto-staff) 
:key-signature :a-flat-major)
#+END_SRC
** canvas expressions
#+BEGIN_SRC lisp

  (:begin :score

   (:begin :part

    (:begin :voice

     (:begin :measure

      (2
       ((1
         :notes
         (65)
         :expressions
         ((:canvas-expression
           :elements
           ((:arrow
             :color
             :green
             :vertices
             ((:x 3.9999988 :y 1.2499999) (:x 8.800003 :y 1.25))
             :pattern
             26
             :line-width
             2.0)
            (:filled-circle :color :cyan :x 4.25 :y -0.6000008)
            (:circle
             :color
             :mediumvioletred
             :pattern
             22
             :line-width
             1.5
             :x
             1.0000001
             :y
             -0.6500002)
            (:lineloop
             :color
             :deeppink
             :vertices
             ((:x 0.15 :y 0.9500001)
              (:x 1.1499999 :y 0.9500001)
              (:x 1.1499999 :y 1.9499995)
              (:x 0.15 :y 1.9499995))
             :pattern
             35
             :line-width
             0.6)
            (:polygon
             :color
             :darkturquoise
             :vertices
             ((:x 1.7500001 :y 0.95000017)
              (:x 2.7500003 :y 0.95000017)
              (:x 2.7500003 :y 1.9499993)
              (:x 1.7500001 :y 1.9499993)))
            (:linestrip
             :color
             :maroon
             :vertices
             ((:x 6.45 :y -1.15)
              (:x 6.950001 :y -0.19999993)
              (:x 7.4500003 :y -0.65000004)
              (:x 7.95 :y 0.35))
             :pattern
             44
             :line-width
             0.4)
            (:line
             :color
             :mediumvioletred
             :vertices
             ((:x 8.600001 :y -0.59999997) (:x 9.6 :y -0.59999997))
             :pattern
             11
             :line-width
             5.0)
            (:text
             :color
             :blue
             :font-scaler
             0.62000037
             :x
             7.000001
             :y
             2.6999994
             :text
             "abcd")
            (:text
             :color
             :goldenrod
             :font-scaler
             1.3499997
             :x
             -0.1
             :y
             2.7499998
             :text
             "whqe"
             :font
             :musical-symbols)))))))
      :time-signature
      (2 8)
      :metronome
      (4 60)))
    :instrument
    nil
    :staff
    :treble-staff))
#+END_SRC
#+BEGIN_SRC lisp

#+END_SRC
* practice
** quick entry looking at a score
*** 
111
15555
1111
21
111
111
555555
1-1-6666
111
15555
111
21
111
111
1111
*** berkowitz melody I-39
:r1111
:r555511
:r55555555
:r112

* lisp development
** defparameter db to nil
#+BEGIN_SRC lisp
(defparameter *db* ())
#+END_SRC

#+RESULTS:
: *DB*
** practice-score 
#+BEGIN_SRC lisp

(setq practice-score '(
:r111
:r15555
:r1111
:r21
:r555555
:r1-1-6666
:r1111))


#+END_SRC

#+RESULTS:
| 111 | 15555 | 1111 | 21 | 111 | 111 | 555555 | 1-1-6666 | 111 | 15555 | 111 | 21 | 111 | 111 | 1111 |



#+RESULTS:
| :R111 | :R15555 | :R1111 | :R21 | :R111 | :R111 | :R555555 | :R1-1-6666 | :R111 | :R15555 | :R111 | :R21 | :R111 | :R111 | :R1111 |
** macro for inserting
#+BEGIN_SRC lisp
(defmacro insert-tag (tag) `(setf (getf *db* ,tag) ()))
#+END_SRC

#+RESULTS:
: INSERT-TAG

** inserting
#+BEGIN_SRC lisp
;(insert-tag :r111)
(insert-tag :r15555)
#+END_SRC

#+RESULTS:
: NIL

** remove key-value pairs from 
#+BEGIN_SRC lisp
(remf *db* :15555)
#+END_SRC

#+RESULTS:
: NIL
** looping over practice-score
#+BEGIN_SRC lisp
;; (loop for tag in practice-score collect tag)
(loop for tag in practice-score do (insert-tag tag))
#+END_SRC

#+RESULTS:
: NIL
** see *db* contents
#+BEGIN_SRC lisp
*db*
#+END_SRC

#+RESULTS:
| :R1-1-6666 | NIL | :R555555 | NIL | :R21 | ((2 (1)) (1 (1))) | :R1111 | ((1 (1)) (1 (1)) (1 (1)) (1 (1))) | :R15555 | NIL | :R111 | ((1 (1)) (1 (1)) (1 (1))) |

** setting up key-value pairs

#+BEGIN_SRC lisp
(setf (getf *db* :r21) '((2 (1)) (1 (1))))
#+END_SRC

#+RESULTS:
| 2 | (1) |
| 1 | (1) |

#+BEGIN_SRC lisp
(setf (getf *db* :r1111) '((1 (1)) (1 (1)) (1 (1)) (1 (1))))
#+END_SRC

#+RESULTS:
| 1 | (1) |
| 1 | (1) |
| 1 | (1) |
| 1 | (1) |

#+BEGIN_SRC lisp
(setf (getf *db* :r111) '((1 (1)) (1 (1)) (1 (1))))
#+END_SRC

#+RESULTS:
| 1 | (1) |
| 1 | (1) |
| 1 | (1) |

* rtm databases
** small and simple rtm 4/4 databases
#+BEGIN_SRC lisp
(defparameter *small-rtmdb* '(:R1-1-6666 ((1 (1)) (1 (-1)) (1 (1 1 1 1))) :R555555 ((1 (1 1)) (1 (1 1)) (1 (1 1))) :R21 ((2 (1)) (1 (1))) :R1111 ((1 (1)) (1 (1)) (1 (1)) (1 (1))) :R15555 ((1 (1)) (1 (1 1)) (1 (1 1))) :R111 ((1 (1)) (1 (1)) (1 (1)))))
#+END_SRC

formatted for easier reading
#+BEGIN_SRC lisp
  (defparameter *small-rtmdb*
    '(:R1-1-6666 ((1 (1)) (1 (-1)) (1 (1 1 1 1)))
      :R555555 ((1 (1 1)) (1 (1 1)) (1 (1 1)))
      :R21 ((2 (1)) (1 (1)))
      :R1111 ((1 (1)) (1 (1)) (1 (1)) (1 (1)))
      :R15555 ((1 (1)) (1 (1 1)) (1 (1 1)))
      :R111 ((1 (1)) (1 (1)) (1 (1)))))
#+END_SRC

#+BEGIN_SRC lisp
:r4 ((4 (1)))

:r22 ((2 (1)) (2 (1)))

:r31 ((3 (1)) (1 (1)))

:r13 ((1 (1)) (3 (1)))

:r211 ((2 (1)) (1 (1)) (1 (1)))

:r121 ((1 (1)) (2 (1)) (1 (1)))

:r112 ((1 (1)) (1 (1)) (2 (1)))

:r55552 ((2 (1 1 1 1)) (2 (1)))

:r25555 ((2 (1)) (2 (1 1 1 1)))

:r55255 ((1 (1 1)) (2 (1)) (1 (1 1)))

:r555511 ((2 (1 1 1 1)) (2 (1 1)))

:r115555 ((2 (1 1)) (2 (1 1 1 1)))

:r1111 ((1 (1)) (1 (1)) (1 (1)) (1 (1)))


#+END_SRC

